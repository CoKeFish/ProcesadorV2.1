
--******************************************************--
--        PONTIFICIA UNIVERSIDAD JAVERIANA              --
--    	  Organizacion de computadores                 --
--          		   PROYECTO                    		  --
-- 													              --
-- Titulo :    Sumador Decimal digito		              --
-- Fecha  :  	D:01 M:11 Y:2020                         --
--******************************************************--

LIBRARY IEEE;
USE IEEE.std_logic_1164.all;
LIBRARY ALTERA;
USE ALTERA.altera_primitives_components.all;

--******************************************************--
-- Comentarios: 
--******************************************************--

ENTITY Procesador IS
	
	PORT (
				--ENTRADAS
				Clock 				:IN STD_LOGIC;
				ResetSystem			:IN STD_LOGIC;
				Dato_Mp				:IN STD_LOGIC_VECTOR(22 DOWNTO 0);
				Datoin_Md			:IN STD_LOGIC_VECTOR(15 DOWNTO 0);
				Int					:IN STD_LOGIC;
				--------------------------------------------------
				--SALIDAS
				Dir_Mp				:OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
				Ena_Mp				:OUT STD_LOGIC;
				Read_Mp				:OUT STD_LOGIC;
				Dataout_Md			:OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
				MDM					:OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
				Ena_Md				:OUT STD_LOGIC;
				RW_Md					:OUT STD_LOGIC;
				Count					:OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
				Estados				:OUT STD_LOGIC_VECTOR(5 DOWNTO 0)
		);
	
END ENTITY Procesador;

ARCHITECTURE	Procesador OF Procesador IS

	--******************************************************--
		COMPONENT DFFE IS
		PORT (
				D						:IN STD_LOGIC;
				CLK					:IN STD_LOGIC;
				CLRN					:IN STD_LOGIC;
				PRN					:IN STD_LOGIC;
				ENA					:IN STD_LOGIC;
				
				Q						:OUT STD_LOGIC
		);
		END COMPONENT DFFE;
	--******************************************************--
		COMPONENT Control IS
			
		PORT (
					--ENTRADAS
					Clock 					:IN STD_LOGIC;--Reloj del sistema
					ResetSystem				:IN STD_LOGIC;--Se√±al para restablecer los valores del sistema
					
					--------------------------------------------------
					--SALIDAS				
					
					--Program counter
					Incremente				:OUT STD_LOGIC;
					Ena_Mp 					:OUT STD_LOGIC;--Reloj del sistema
					PC_DirMP_Enable		:OUT STD_LOGIC;
					Estados 					:OUT STD_LOGIC_VECTOR(5 DOWNTO 0)
			);
			
		END COMPONENT Control;
	--******************************************************--
		COMPONENT ProgramCounter IS
			
			PORT (
						--ENTRADAS
						Clock 				:IN STD_LOGIC;
						ResetSystem			:IN STD_LOGIC;
						Incremente			:IN STD_LOGIC;
						SavePC      		:IN STD_LOGIC;
						PC_in       		:IN STD_LOGIC_VECTOR(15 DOWNTO 0);
						--------------------------------------------------
						--SALIDAS
						PC_out    			:OUT STD_LOGIC_VECTOR(15 DOWNTO 0)
				);
			
		END COMPONENT ProgramCounter;
	--******************************************************--

			SIGNAL Q					:STD_LOGIC_VECTOR (5 DOWNTO 0);
			SIGNAL ENA				:STD_LOGIC_VECTOR (5 DOWNTO 0);
			SIGNAL D					:STD_LOGIC_VECTOR (5 DOWNTO 0);
		
		
			SIGNAL Incremente		:STD_LOGIC;
			SIGNAL SavePC			:STD_LOGIC;
			SIGNAL PC_in			:STD_LOGIC_VECTOR(15 DOWNTO 0);
			SIGNAL PC_out  		:STD_LOGIC_VECTOR(15 DOWNTO 0);
			SIGNAL COMP				:STD_LOGIC;
			SIGNAL MULT				:STD_LOGIC;
			SIGNAL AND_S			:STD_LOGIC;
			SIGNAL OR_S				:STD_LOGIC;
			SIGNAL NOT_S			:STD_LOGIC;
			SIGNAL SR				:STD_LOGIC;
			SIGNAL SRA_S			:STD_LOGIC;
			SIGNAL CR				:STD_LOGIC;
			

	
BEGIN

		Count <= PC_out;
		
		B_Program_counter	:	Program_counter	PORT MAP (
																			Clock,
																			ResetSystem,
																			Incremente,
																			'0',
																			PC_out,
																			PC_out);
																			
		B_Control	:	Control	PORT MAP (
																			Clock,
																			ResetSystem,
																			Incremente,
																			Ena_Mp,
																			Estados);
		
		

	--******************************************************--

END ARCHITECTURE	Procesador;