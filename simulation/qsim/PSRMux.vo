// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "12/01/2020 19:20:02"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module PSRMux (
	Datoin_Md,
	ALUStatus,
	SelectPSR,
	Banderas);
input 	[4:0] Datoin_Md;
input 	[3:0] ALUStatus;
input 	SelectPSR;
output 	[4:0] Banderas;

// Design Ports Information
// Banderas[0]	=>  Location: PIN_K9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Banderas[1]	=>  Location: PIN_M11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Banderas[2]	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Banderas[3]	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Banderas[4]	=>  Location: PIN_L5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Datoin_Md[0]	=>  Location: PIN_N10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ALUStatus[0]	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SelectPSR	=>  Location: PIN_N11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Datoin_Md[1]	=>  Location: PIN_N9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ALUStatus[1]	=>  Location: PIN_M9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Datoin_Md[2]	=>  Location: PIN_N8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ALUStatus[2]	=>  Location: PIN_L9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Datoin_Md[3]	=>  Location: PIN_K8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ALUStatus[3]	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Datoin_Md[4]	=>  Location: PIN_G13,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Banderas[0]~output_o ;
wire \Banderas[1]~output_o ;
wire \Banderas[2]~output_o ;
wire \Banderas[3]~output_o ;
wire \Banderas[4]~output_o ;
wire \SelectPSR~input_o ;
wire \ALUStatus[0]~input_o ;
wire \Datoin_Md[0]~input_o ;
wire \Banderas~0_combout ;
wire \Datoin_Md[1]~input_o ;
wire \ALUStatus[1]~input_o ;
wire \Banderas~1_combout ;
wire \Datoin_Md[2]~input_o ;
wire \ALUStatus[2]~input_o ;
wire \Banderas~2_combout ;
wire \ALUStatus[3]~input_o ;
wire \Datoin_Md[3]~input_o ;
wire \Banderas~3_combout ;
wire \Datoin_Md[4]~input_o ;
wire \Banderas~4_combout ;


// Location: IOOBUF_X22_Y0_N2
cycloneiv_io_obuf \Banderas[0]~output (
	.i(\Banderas~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Banderas[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Banderas[0]~output .bus_hold = "false";
defparam \Banderas[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X29_Y0_N9
cycloneiv_io_obuf \Banderas[1]~output (
	.i(\Banderas~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Banderas[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Banderas[1]~output .bus_hold = "false";
defparam \Banderas[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X8_Y0_N9
cycloneiv_io_obuf \Banderas[2]~output (
	.i(\Banderas~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Banderas[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Banderas[2]~output .bus_hold = "false";
defparam \Banderas[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X14_Y0_N2
cycloneiv_io_obuf \Banderas[3]~output (
	.i(\Banderas~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Banderas[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \Banderas[3]~output .bus_hold = "false";
defparam \Banderas[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X14_Y0_N9
cycloneiv_io_obuf \Banderas[4]~output (
	.i(\Banderas~4_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Banderas[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \Banderas[4]~output .bus_hold = "false";
defparam \Banderas[4]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X26_Y0_N1
cycloneiv_io_ibuf \SelectPSR~input (
	.i(SelectPSR),
	.ibar(gnd),
	.o(\SelectPSR~input_o ));
// synopsys translate_off
defparam \SelectPSR~input .bus_hold = "false";
defparam \SelectPSR~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X12_Y0_N1
cycloneiv_io_ibuf \ALUStatus[0]~input (
	.i(ALUStatus[0]),
	.ibar(gnd),
	.o(\ALUStatus[0]~input_o ));
// synopsys translate_off
defparam \ALUStatus[0]~input .bus_hold = "false";
defparam \ALUStatus[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X26_Y0_N8
cycloneiv_io_ibuf \Datoin_Md[0]~input (
	.i(Datoin_Md[0]),
	.ibar(gnd),
	.o(\Datoin_Md[0]~input_o ));
// synopsys translate_off
defparam \Datoin_Md[0]~input .bus_hold = "false";
defparam \Datoin_Md[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X26_Y1_N24
cycloneiv_lcell_comb \Banderas~0 (
// Equation(s):
// \Banderas~0_combout  = (\SelectPSR~input_o  & ((\Datoin_Md[0]~input_o ))) # (!\SelectPSR~input_o  & (\ALUStatus[0]~input_o ))

	.dataa(gnd),
	.datab(\SelectPSR~input_o ),
	.datac(\ALUStatus[0]~input_o ),
	.datad(\Datoin_Md[0]~input_o ),
	.cin(gnd),
	.combout(\Banderas~0_combout ),
	.cout());
// synopsys translate_off
defparam \Banderas~0 .lut_mask = 16'hFC30;
defparam \Banderas~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X20_Y0_N1
cycloneiv_io_ibuf \Datoin_Md[1]~input (
	.i(Datoin_Md[1]),
	.ibar(gnd),
	.o(\Datoin_Md[1]~input_o ));
// synopsys translate_off
defparam \Datoin_Md[1]~input .bus_hold = "false";
defparam \Datoin_Md[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X24_Y0_N1
cycloneiv_io_ibuf \ALUStatus[1]~input (
	.i(ALUStatus[1]),
	.ibar(gnd),
	.o(\ALUStatus[1]~input_o ));
// synopsys translate_off
defparam \ALUStatus[1]~input .bus_hold = "false";
defparam \ALUStatus[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X26_Y1_N10
cycloneiv_lcell_comb \Banderas~1 (
// Equation(s):
// \Banderas~1_combout  = (\SelectPSR~input_o  & (\Datoin_Md[1]~input_o )) # (!\SelectPSR~input_o  & ((\ALUStatus[1]~input_o )))

	.dataa(\Datoin_Md[1]~input_o ),
	.datab(\ALUStatus[1]~input_o ),
	.datac(gnd),
	.datad(\SelectPSR~input_o ),
	.cin(gnd),
	.combout(\Banderas~1_combout ),
	.cout());
// synopsys translate_off
defparam \Banderas~1 .lut_mask = 16'hAACC;
defparam \Banderas~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X20_Y0_N8
cycloneiv_io_ibuf \Datoin_Md[2]~input (
	.i(Datoin_Md[2]),
	.ibar(gnd),
	.o(\Datoin_Md[2]~input_o ));
// synopsys translate_off
defparam \Datoin_Md[2]~input .bus_hold = "false";
defparam \Datoin_Md[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X24_Y0_N8
cycloneiv_io_ibuf \ALUStatus[2]~input (
	.i(ALUStatus[2]),
	.ibar(gnd),
	.o(\ALUStatus[2]~input_o ));
// synopsys translate_off
defparam \ALUStatus[2]~input .bus_hold = "false";
defparam \ALUStatus[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X26_Y1_N28
cycloneiv_lcell_comb \Banderas~2 (
// Equation(s):
// \Banderas~2_combout  = (\SelectPSR~input_o  & (\Datoin_Md[2]~input_o )) # (!\SelectPSR~input_o  & ((\ALUStatus[2]~input_o )))

	.dataa(\Datoin_Md[2]~input_o ),
	.datab(\ALUStatus[2]~input_o ),
	.datac(gnd),
	.datad(\SelectPSR~input_o ),
	.cin(gnd),
	.combout(\Banderas~2_combout ),
	.cout());
// synopsys translate_off
defparam \Banderas~2 .lut_mask = 16'hAACC;
defparam \Banderas~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X12_Y0_N8
cycloneiv_io_ibuf \ALUStatus[3]~input (
	.i(ALUStatus[3]),
	.ibar(gnd),
	.o(\ALUStatus[3]~input_o ));
// synopsys translate_off
defparam \ALUStatus[3]~input .bus_hold = "false";
defparam \ALUStatus[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X22_Y0_N8
cycloneiv_io_ibuf \Datoin_Md[3]~input (
	.i(Datoin_Md[3]),
	.ibar(gnd),
	.o(\Datoin_Md[3]~input_o ));
// synopsys translate_off
defparam \Datoin_Md[3]~input .bus_hold = "false";
defparam \Datoin_Md[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X26_Y1_N6
cycloneiv_lcell_comb \Banderas~3 (
// Equation(s):
// \Banderas~3_combout  = (\SelectPSR~input_o  & ((\Datoin_Md[3]~input_o ))) # (!\SelectPSR~input_o  & (\ALUStatus[3]~input_o ))

	.dataa(gnd),
	.datab(\ALUStatus[3]~input_o ),
	.datac(\Datoin_Md[3]~input_o ),
	.datad(\SelectPSR~input_o ),
	.cin(gnd),
	.combout(\Banderas~3_combout ),
	.cout());
// synopsys translate_off
defparam \Banderas~3 .lut_mask = 16'hF0CC;
defparam \Banderas~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X33_Y16_N22
cycloneiv_io_ibuf \Datoin_Md[4]~input (
	.i(Datoin_Md[4]),
	.ibar(gnd),
	.o(\Datoin_Md[4]~input_o ));
// synopsys translate_off
defparam \Datoin_Md[4]~input .bus_hold = "false";
defparam \Datoin_Md[4]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X26_Y1_N8
cycloneiv_lcell_comb \Banderas~4 (
// Equation(s):
// \Banderas~4_combout  = (\Datoin_Md[4]~input_o  & \SelectPSR~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\Datoin_Md[4]~input_o ),
	.datad(\SelectPSR~input_o ),
	.cin(gnd),
	.combout(\Banderas~4_combout ),
	.cout());
// synopsys translate_off
defparam \Banderas~4 .lut_mask = 16'hF000;
defparam \Banderas~4 .sum_lutc_input = "datac";
// synopsys translate_on

assign Banderas[0] = \Banderas[0]~output_o ;

assign Banderas[1] = \Banderas[1]~output_o ;

assign Banderas[2] = \Banderas[2]~output_o ;

assign Banderas[3] = \Banderas[3]~output_o ;

assign Banderas[4] = \Banderas[4]~output_o ;

endmodule
